name: 'Terraform Destroy'

on:
  workflow_dispatch:

# Special permissions required for OIDC authentication
permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  terraform-destroy:
    name: 'Terraform Destroy'
    runs-on: ubuntu-latest
    environment: production

    env:
      ARM_CLIENT_ID: "${{ secrets.ARM_CLIENT_ID }}"
      ARM_CLIENT_SECRET: "${{ secrets.ARM_CLIENT_SECRET }}"
      ARM_SUBSCRIPTION_ID: "${{ secrets.ARM_SUBSCRIPTION_ID }}"
      ARM_TENANT_ID: "${{ secrets.ARM_TENANT_ID }}"

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      working-directory: ./Provision-Infrastructure
      run: terraform init

    # Terraform Destroy
    - name: Terraform Destroy
      working-directory: ./Provision-Infrastructure
      run: |
        terraform state rm module.K8sInfra.azurerm_kubernetes_cluster.default
        terraform state rm module.K8sInfra.helm_release.external_nginx
        terraform destroy -auto-approve

