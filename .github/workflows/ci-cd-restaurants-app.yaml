name: 'CI-CD restaurants-app'

on:
  
  workflow_run:
    workflows: ["Cluster Setup"]
    types:
      - completed

env:
    ARM_CLIENT_ID: "${{ secrets.ARM_CLIENT_ID }}"
    ARM_CLIENT_SECRET: "${{ secrets.ARM_CLIENT_SECRET }}"
    ARM_SUBSCRIPTION_ID: "${{ secrets.ARM_SUBSCRIPTION_ID }}"
    ARM_TENANT_ID: "${{ secrets.ARM_TENANT_ID }}"
    yaml_file: "./Provision-Infrastructure/modules/DeploymentPrep/prep_deployment.yaml"

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
    
      - name: AKS get-credentials
        # working-directory: ./Provision-Infrastructure
        run: |
          ./K8sDeployment/scripts/aks-get-credentials.sh



      - name: ACR login
        # working-directory: ./Provision-Infrastructure
        run: |
          ACR_NAME=$(yq eval '.AzureResources.ACR.name' "$yaml_file")
          az acr login --name $ACR_NAME

      - name: Set up Docker tag with timestamp
        id: vars
        run: |
          TIMESTAMP=$(date +%Y-%m-%d-%H-%M)
          echo "IMAGE_TAG=${TIMESTAMP}" >> $GITHUB_ENV

      - name: Build and Push Docker image
        working-directory: ./RestaurantApp
        run: |
          ACR_NAME=$(yq eval '.AzureResources.ACR.name' "$yaml_file")
          docker build -t $ACR_NAME.azurecr.io/restaurants-app:${{ env.IMAGE_TAG }} .
          docker push $ACR_NAME.azurecr.io/restaurants-app:${{ env.IMAGE_TAG }}

   
          
  CD:
    runs-on: ubuntu-latest
    needs: [CI]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
    
      - name: AKS get-credentials
        # working-directory: ./Provision-Infrastructure
        run: |
          ./K8sDeployment/scripts/aks-get-credentials.sh  